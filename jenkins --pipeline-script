pipeline {
    agent any // Defines the agent to run the pipeline

    environment {
        // Define environment variables used in the pipeline
        APP_NAME = 'MyApp'
        DOCKER_IMAGE = "myapp:${BUILD_NUMBER}"
    }

    stages {
        stage('Initialize') {
            steps {
                echo 'Initializing the pipeline...'
                echo "Application Name: ${APP_NAME}"
                echo "Build Number: ${BUILD_NUMBER}"
            }
        }

        stage('Checkout Code') {
            steps {
                echo 'Checking out source code from Git...'
                git branch: 'main', url: 'https://github.com/username/repository.git'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project...'
                sh './build.sh' // Replace with your build command
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests...'
                sh './test.sh' // Replace with your test command
            }
        }

        stage('Package') {
            steps {
                echo 'Packaging the application...'
                sh 'tar -czf app.tar.gz ./dist' // Example of creating a tarball
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                sh 'docker build -t ${DOCKER_IMAGE} .'
            }
        }

        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image to the registry...'
                withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker tag ${DOCKER_IMAGE} mydockerhubusername/${DOCKER_IMAGE}
                        docker push mydockerhubusername/${DOCKER_IMAGE}
                    '''
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying the application...'
                sh '''
                    kubectl apply -f k8s/deployment.yaml
                    kubectl rollout status deployment/myapp
                '''
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs for more details.'
        }
    }
}
